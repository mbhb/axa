public class Conexion {
    public void conectar() {
        System.out.println("Conectando a la red...");
    }

    public String obtenerAcceso() {
        return "acceso";
    }
}

public class Calendario {
    private Conexion conexion;

    public Calendario(Conexion conexion) {
        this.conexion = conexion;
    }

    public void obtenerCalendarioEmpleado(String email) {
        System.out.println("Obteniendo calendario del empleado: " + email);
    }

    public void agendarReunion(List<String> asistentes, String fechaHora, String tema) {
        System.out.println("Agendando reunión con los asistentes: " + asistentes + " para la fecha y hora: " + fechaHora + " sobre el asunto: " + asunto );
    }

    public void obtenerCalendarioGrupo(String nombreGrupo) {
        System.out.println("Obteniendo calendario del grupo: " + nombreGrupo);
    }
}

public class Contacto {
    private Conexion conexion;

    public Contacto(Conexion conexion) {
        this.conexion = conexion;
    }

    public void obtenerContacto(String email) {
        System.out.println("Obteniendo contacto del email: " + email);
    }

    public void enviarMensaje(String email, String mensaje) {
        System.out.println("Enviando mensaje al email: " + email + " con el mensaje: " + mensaje);
    }

    public void verContactos() {
        System.out.println("Viendo todos los contactos);
    }

    public boolean existeContacto(String email) {
        System.out.println("Verificando existencia del contacto: " + email);
        return true;
    }

    public void obtenerYEnviarMensaje(String email, String mensaje) {
        if (existeContacto(email)) {
            enviarMensaje(email, mensaje);
        }
    }
}

public class Chat {
    private Conexion conexion;
    private Calendario calendario;
    private Contacto contacto;

    public Chat() {
        this.conexion = new Conexion();
        this.calendario = new Calendario(conexion);
        this.contacto = new Contacto(conexion);
    }

    public void procesarSolicitud(String solicitud) {
        mostrarMensaje("Procesando solicitud: " + solicitud);
        // Implementar lógica para procesar la solicitud
        if (solicitud.contains("calendario")) {
            calendario.obtenerCalendarioEmpleado("ejemplo@empresa.com");
        } else if (solicitud.contains("mensaje")) {
            contacto.obtenerYEnviarMensaje("ejemplo@empresa.com", "Este es un mensaje de prueba.");
        }
    }

    public void ejecutarChat() {
        mostrarMensaje("Iniciando chat...");
        procesarSolicitud("calendario");
        procesarSolicitud("mensaje");
    }

    public void mostrarMensaje(String mensaje) {
        System.out.println(mensaje);
    }

    public void aceptarReunion(String idReunion) {
        String acceso = conexion.obtenerAcceso();
        System.out.println("Aceptando reunión);
    }

    public static void main(String[] args) {
        Chat chat = new Chat();
        chat.ejecutarChat();
    }
}
